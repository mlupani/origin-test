{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport users from '../api/users';\n\nconst useAuth = () => {\n  _s();\n\n  const [isLogged, setIsLogged] = useState(null);\n  const [user, setUser] = useState();\n\n  const getUser = async () => {\n    users.get('/checkLogin').then(res => {\n      setIsLogged(res.data.isLogged);\n      setUser(res.data.user);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  useEffect(() => {\n    getUser();\n  }, []);\n  return {\n    isLogged,\n    user\n  };\n};\n\n_s(useAuth, \"Aq4IgIKzYHpAM2GDFG2bRODXV40=\");\n\nexport default useAuth;","map":{"version":3,"sources":["C:/Users/xenei/Desktop/origin-test/client/src/hooks/useAuth.tsx"],"names":["useEffect","useState","users","useAuth","isLogged","setIsLogged","user","setUser","getUser","get","then","res","data","catch","err","console","log"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,cAAlB;;AAGA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAElB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAiB,IAAjB,CAAxC;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,EAAhC;;AAEA,QAAMO,OAAO,GAAG,YAAY;AAExBN,IAAAA,KAAK,CAACO,GAAN,CAAwB,aAAxB,EAAuCC,IAAvC,CAA4CC,GAAG,IAAI;AAC/CN,MAAAA,WAAW,CAACM,GAAG,CAACC,IAAJ,CAASR,QAAV,CAAX;AACAG,MAAAA,OAAO,CAACI,GAAG,CAACC,IAAJ,CAASN,IAAV,CAAP;AACH,KAHD,EAGGO,KAHH,CAGSC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KALD;AAMH,GARD;;AAUAd,EAAAA,SAAS,CAAC,MAAM;AACbQ,IAAAA,OAAO;AACT,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAO;AACHJ,IAAAA,QADG;AAEHE,IAAAA;AAFG,GAAP;AAIH,CAvBD;;GAAMH,O;;AAyBN,eAAeA,OAAf","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport users from '../api/users';\r\nimport { userStateAPI, userState } from '../interfaces/userInterface';\r\n\r\nconst useAuth = () => {\r\n\r\n    const [isLogged, setIsLogged] = useState<boolean | null>(null);\r\n    const [user, setUser] = useState<userState>();\r\n\r\n    const getUser = async () => {\r\n\r\n        users.get<userStateAPI>('/checkLogin').then(res => {\r\n            setIsLogged(res.data.isLogged)\r\n            setUser(res.data.user)\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n       getUser();\r\n    }, []);\r\n\r\n    return {\r\n        isLogged,\r\n        user\r\n    }\r\n}\r\n\r\nexport default useAuth\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xenei\\\\Desktop\\\\origin-test\\\\client\\\\src\\\\components\\\\actionDetail.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport useAuth from '../hooks/useAuth';\nimport { useHistory } from 'react-router-dom';\nimport twelvedata, { apikey } from '../api/twelvedataAPI';\nimport Highcharts from \"highcharts/highstock\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ActionDetail = ({\n  match\n}) => {\n  _s();\n\n  const {\n    user,\n    isLogged\n  } = useAuth();\n  const [actionSelected, setActionSelected] = useState(JSON.parse(match.params.action));\n  const history = useHistory();\n  const [optionSelected, setOptionSelected] = useState(0);\n  const [intervalo, setIntervalo] = useState(1);\n  const [chartOptions, setChartOptions] = useState();\n  const [values, setValues] = useState([]);\n  const [desde, setDesde] = useState('');\n  const [hasta, setHasta] = useState('');\n  const [error, setError] = useState('');\n  const [timeInterval, setTimeInterval] = useState();\n  useEffect(() => {\n    if (isLogged === false) history.push('/');\n  }, [isLogged, history]);\n  useEffect(() => {\n    console.log(values);\n    changeOptions();\n  }, [values]);\n\n  const changeOptions = () => {\n    setChartOptions({\n      series: [{\n        data: values.map(({\n          value\n        }) => value),\n        name: 'CotizaciÃ³n',\n        enablePolling: true,\n        dataRefreshRate: intervalo\n      }],\n      title: {\n        text: actionSelected.symbol\n      },\n      xAxis: [{\n        tickintervalo: 1,\n        title: {\n          text: 'intervalo'\n        },\n        labels: {\n          enabled: true,\n          formatter: val => values[val.value].date\n        }\n      }],\n      yAxis: [{\n        title: {\n          text: 'Cotizacion'\n        }\n      }]\n    });\n  };\n\n  const graficar = async () => {\n    const time = setInterval(() => loadValues(), intervalo * 60000);\n    setTimeInterval(time);\n  };\n\n  const loadValues = async () => {\n    setError('');\n    let newValues = [];\n\n    if (optionSelected === 0) {\n      const res = await twelvedata.get(`https://api.twelvedata.com/time_series?symbol=${actionSelected.symbol}&interval=${intervalo}min&apikey=${apikey}`);\n      newValues = res.data.values.map(({\n        datetime,\n        open\n      }) => {\n        const d = new Date(datetime);\n        const date = d.getHours() + ':' + (d.getMinutes() < 10 ? '0' : '') + d.getMinutes();\n        return {\n          date,\n          value: +open\n        };\n      });\n      setValues(newValues.reverse().slice(25, 30));\n      graficar();\n    }\n\n    if (optionSelected === 1) {\n      if (!desde || !hasta) {\n        setError('Por favor seleccione una fecha de inicio y de fin');\n        return false;\n      }\n\n      const res = await twelvedata.get(`https://api.twelvedata.com/time_series?symbol=${actionSelected.symbol}&interval=${intervalo}min&start_date=${desde}%2009:48:00&end_date=${hasta}%2019:48:00&apikey=${apikey}`);\n      console.log(res.data.values);\n      newValues = res.data.values.map(({\n        datetime,\n        open\n      }) => {\n        const d = new Date(datetime);\n        const date = d.getDay() + '/' + d.getMonth() + '/' + d.getFullYear();\n        return {\n          date,\n          value: +open\n        };\n      });\n      setValues(newValues);\n      graficar();\n    }\n  };\n\n  const changeinterval = val => {\n    setIntervalo(+val);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [actionSelected.symbol, \" - \", actionSelected.name, \" - \", actionSelected.currency]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Usuario: \", user === null || user === void 0 ? void 0 : user.login]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"graficar\",\n        onChange: () => setOptionSelected(0),\n        id: \"graficar\",\n        checked: optionSelected === 0 ? true : false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), \"\\xA0\\xA0Tiempo Real\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"graficar\",\n        onChange: () => setOptionSelected(1),\n        id: \"graficar\",\n        checked: optionSelected === 1 ? true : false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), \"\\xA0\\xA0Hist\\xF3rico \\xA0\\xA0 Desde \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        onChange: e => setDesde(e.target.value),\n        placeholder: \"Desde\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 23\n      }, this), \"\\xA0\\xA0\\xA0\\xA0 Hasta \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        onChange: e => setHasta(e.target.value),\n        placeholder: \"Hasta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 23\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginTop: 20\n        },\n        className: \"text-danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 50,\n        display: 'flex',\n        width: 500,\n        justifyContent: 'flex-start'\n      },\n      children: [\"\\xA0\\xA0Intervalo\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => changeinterval(e.target.value),\n        name: \"intervaloo\",\n        id: \"intervaloo\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1\",\n          children: \"1 Minuto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"5\",\n          children: \"5 Minutos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"15\",\n          children: \"15 Minutos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"grafico\",\n      style: {\n        marginTop: 50,\n        display: 'flex',\n        width: 500,\n        justifyContent: 'space-between'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => history.goBack(),\n        className: \"btn btn-warning btn-sm\",\n        children: \"Volver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: loadValues,\n        className: \"btn btn-primary btn-sm\",\n        children: \"Graficar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 50,\n        display: 'flex',\n        width: 800,\n        justifyContent: 'flex-start'\n      },\n      children: values.length ? /*#__PURE__*/_jsxDEV(HighchartsReact, {\n        highcharts: Highcharts,\n        options: chartOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 37\n      }, this) : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ActionDetail, \"jha0KF1mFi4eS4fVFEwesLKFl/Q=\", false, function () {\n  return [useAuth, useHistory];\n});\n\n_c = ActionDetail;\nexport default ActionDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActionDetail\");","map":{"version":3,"sources":["C:/Users/xenei/Desktop/origin-test/client/src/components/actionDetail.tsx"],"names":["useState","useEffect","useAuth","useHistory","twelvedata","apikey","Highcharts","HighchartsReact","ActionDetail","match","user","isLogged","actionSelected","setActionSelected","JSON","parse","params","action","history","optionSelected","setOptionSelected","intervalo","setIntervalo","chartOptions","setChartOptions","values","setValues","desde","setDesde","hasta","setHasta","error","setError","timeInterval","setTimeInterval","push","console","log","changeOptions","series","data","map","value","name","enablePolling","dataRefreshRate","title","text","symbol","xAxis","tickintervalo","labels","enabled","formatter","val","date","yAxis","graficar","time","setInterval","loadValues","newValues","res","get","datetime","open","d","Date","getHours","getMinutes","reverse","slice","getDay","getMonth","getFullYear","changeinterval","currency","login","e","target","marginTop","display","width","justifyContent","goBack","length"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport useAuth from '../hooks/useAuth';\r\nimport { useHistory } from 'react-router-dom';\r\nimport twelvedata, {apikey} from '../api/twelvedataAPI';\r\n\r\nimport Highcharts from \"highcharts/highstock\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\n\r\n\r\nconst ActionDetail = ({match}: any) => {\r\n\r\n    const { user, isLogged } = useAuth();\r\n    const [actionSelected, setActionSelected] = useState(JSON.parse(match.params.action))\r\n    const history = useHistory();\r\n    const [optionSelected, setOptionSelected] = useState(0)\r\n    const [intervalo, setIntervalo] = useState(1)\r\n    const [chartOptions, setChartOptions] = useState<any>();\r\n    const [values, setValues] = useState<any>([])\r\n    const [desde, setDesde] = useState('')\r\n    const [hasta, setHasta] = useState('')\r\n    const [error, setError] = useState('')\r\n    const [timeInterval, setTimeInterval] = useState<any>()\r\n\r\n    useEffect(() => {\r\n        if(isLogged === false)\r\n            history.push('/')\r\n\r\n    }, [isLogged, history])\r\n\r\n    useEffect(() => {\r\n        console.log(values);\r\n        changeOptions()\r\n    }, [values])\r\n\r\n    const changeOptions = () => {\r\n            setChartOptions({\r\n                series: [\r\n                    {\r\n                        data: values.map(({value}: any) => value),\r\n                        name:'CotizaciÃ³n',\r\n                        enablePolling: true,\r\n                        dataRefreshRate: intervalo\r\n                    },\r\n                ],\r\n                title: {\r\n                    text:actionSelected.symbol\r\n                },\r\n                xAxis: [{\r\n                    tickintervalo: 1,\r\n                    title: {\r\n                        text: 'intervalo',\r\n                    },\r\n                    labels: {\r\n                            enabled: true,\r\n                            formatter: (val: any) => values[val.value].date\r\n                        }\r\n                }],\r\n                yAxis: [{\r\n                    title: {\r\n                        text: 'Cotizacion'\r\n                    }\r\n                }],\r\n            })\r\n        }\r\n\r\n    const graficar = async () => {\r\n        const time = setInterval(() => loadValues(),intervalo * 60000)\r\n        setTimeInterval(time)\r\n    }\r\n\r\n    const loadValues = async () => {\r\n\r\n        setError('')\r\n        let newValues = [];\r\n\r\n        if(optionSelected === 0){\r\n            const res = await twelvedata.get(`https://api.twelvedata.com/time_series?symbol=${actionSelected.symbol}&interval=${intervalo}min&apikey=${apikey}`)\r\n            newValues = res.data.values.map(({datetime,open}: any) => {\r\n                const d = new Date(datetime)\r\n                const date = d.getHours()+':'+(d.getMinutes()<10?'0':'') + d.getMinutes();\r\n                return {date, value: +open }\r\n            })\r\n            setValues(newValues.reverse().slice(25,30))\r\n            graficar()\r\n        }\r\n\r\n        if(optionSelected === 1){\r\n\r\n            if(!desde || !hasta) {\r\n                setError('Por favor seleccione una fecha de inicio y de fin')\r\n                return false;\r\n            }\r\n\r\n            const res = await twelvedata.get(`https://api.twelvedata.com/time_series?symbol=${actionSelected.symbol}&interval=${intervalo}min&start_date=${desde}%2009:48:00&end_date=${hasta}%2019:48:00&apikey=${apikey}`)\r\n            console.log(res.data.values);\r\n            newValues = res.data.values.map(({datetime,open}: any) => {\r\n                const d = new Date(datetime)\r\n                const date = d.getDay()+'/'+d.getMonth()+'/'+d.getFullYear()\r\n                return {date, value: +open }\r\n            })\r\n            setValues(newValues)\r\n            graficar()\r\n        }\r\n\r\n    }\r\n\r\n    const changeinterval = (val: string) => {\r\n        setIntervalo(+val)\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='header'>\r\n                <p>{actionSelected.symbol} - {actionSelected.name} - {actionSelected.currency}</p>\r\n                <p>Usuario: {user?.login}</p>\r\n            </div>\r\n            <div>\r\n                <input type=\"radio\" name=\"graficar\" onChange={()=> setOptionSelected(0)} id=\"graficar\" checked={optionSelected === 0? true : false} />\r\n                &nbsp;&nbsp;Tiempo Real\r\n                <br></br><br></br>\r\n                <input type=\"radio\" name=\"graficar\" onChange={()=> setOptionSelected(1)} id=\"graficar\" checked={optionSelected === 1? true : false} />\r\n                &nbsp;&nbsp;HistÃ³rico\r\n\r\n                &nbsp;&nbsp;\r\n                Desde <input type='date' onChange={(e)=>setDesde(e.target.value)} placeholder='Desde' />\r\n                &nbsp;&nbsp;&nbsp;&nbsp;\r\n                Hasta <input type='date' onChange={(e)=>setHasta(e.target.value)} placeholder='Hasta' />\r\n\r\n                {error && <p style={{marginTop: 20}} className='text-danger'>{error}</p>}\r\n\r\n            </div>\r\n            <div style={{marginTop: 50, display:'flex', width:500, justifyContent: 'flex-start'}}>\r\n                &nbsp;&nbsp;Intervalo&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <select onChange={(e) => changeinterval(e.target.value)} name=\"intervaloo\" id=\"intervaloo\">\r\n                    <option value=\"1\">1 Minuto</option>\r\n                    <option value=\"5\">5 Minutos</option>\r\n                    <option value=\"15\">15 Minutos</option>\r\n                </select>\r\n            </div>\r\n            <div id='grafico' style={{marginTop: 50, display:'flex', width:500, justifyContent: 'space-between'}}>\r\n                <button onClick={() => history.goBack()} className='btn btn-warning btn-sm'>Volver</button>\r\n                <button onClick={loadValues} className='btn btn-primary btn-sm'>Graficar</button>\r\n            </div>\r\n            <div style={{marginTop: 50, display:'flex', width:800, justifyContent: 'flex-start'}}>\r\n                {\r\n                    values.length ? <HighchartsReact highcharts={Highcharts} options={chartOptions} /> : ''\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActionDetail\r\n"]},"metadata":{},"sourceType":"module"}
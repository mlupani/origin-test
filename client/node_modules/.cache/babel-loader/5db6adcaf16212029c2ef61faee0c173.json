{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect, useCallback } from 'react';\nimport twelvedata from '../api/twelvedataAPI';\nimport users from '../api/users';\n\nconst useGetActions = id => {\n  _s();\n\n  const [actions, setActions] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [actionsUser, setActionsUser] = useState([]);\n\n  const loadActions = async () => {\n    try {\n      const res = await twelvedata.get('https://api.twelvedata.com/stocks?source=docs&exchange=NYSE');\n      setActions(res.data.data);\n      setIsLoading(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const loadActionsUser = useCallback(async id => {\n    try {\n      const res = await users.get(`/getActionsUser?user=${id}`);\n      setActionsUser(res.data);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n  useEffect(() => {\n    loadActions();\n    loadActionsUser(id);\n  }, [loadActionsUser, id]);\n  return {\n    actions,\n    actionsUser,\n    isLoading,\n    loadActionsUser\n  };\n};\n\n_s(useGetActions, \"tgAsCO9mAEBWNvA2O2B6U6bdJM4=\");\n\nexport default useGetActions;","map":{"version":3,"sources":["C:/Users/xenei/Desktop/origin-test/client/src/hooks/useGetActions.tsx"],"names":["useState","useEffect","useCallback","twelvedata","users","useGetActions","id","actions","setActions","isLoading","setIsLoading","actionsUser","setActionsUser","loadActions","res","get","data","error","console","log","loadActionsUser"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,KAAP,MAAkB,cAAlB;;AAGA,MAAMC,aAAa,GAAIC,EAAD,IAAgB;AAAA;;AAElC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAY,EAAZ,CAAtC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAY,EAAZ,CAA9C;;AAEA,QAAMa,WAAW,GAAG,YAAY;AAC5B,QAAI;AACA,YAAMC,GAAG,GAAG,MAAMX,UAAU,CAACY,GAAX,CAAuB,6DAAvB,CAAlB;AACAP,MAAAA,UAAU,CAACM,GAAG,CAACE,IAAJ,CAASA,IAAV,CAAV;AACAN,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAJD,CAIE,OAAOO,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,GARD;;AAUA,QAAMG,eAAe,GAAGlB,WAAW,CAAC,MAAOI,EAAP,IAAc;AAC9C,QAAI;AACA,YAAMQ,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAW,wBAAuBT,EAAG,EAArC,CAAlB;AACAM,MAAAA,cAAc,CAACE,GAAG,CAACE,IAAL,CAAd;AACH,KAHD,CAGE,OAAOC,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,GAPkC,EAOjC,EAPiC,CAAnC;AASAhB,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,WAAW;AACXO,IAAAA,eAAe,CAACd,EAAD,CAAf;AACH,GAHQ,EAGN,CAACc,eAAD,EAAiBd,EAAjB,CAHM,CAAT;AAKA,SAAO;AACHC,IAAAA,OADG;AAEHI,IAAAA,WAFG;AAGHF,IAAAA,SAHG;AAIHW,IAAAA;AAJG,GAAP;AAMH,CApCD;;GAAMf,a;;AAsCN,eAAeA,aAAf","sourcesContent":["import { useState, useEffect, useCallback } from 'react';\r\nimport twelvedata from '../api/twelvedataAPI';\r\nimport users from '../api/users';\r\nimport { Actions, Result } from '../interfaces/twelvedataAPI';\r\n\r\nconst useGetActions = (id: string) => {\r\n\r\n    const [actions, setActions] = useState<Actions[]>([]);\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [actionsUser, setActionsUser] = useState<Actions[]>([]);\r\n\r\n    const loadActions = async () => {\r\n        try {\r\n            const res = await twelvedata.get<Result>('https://api.twelvedata.com/stocks?source=docs&exchange=NYSE');\r\n            setActions(res.data.data)\r\n            setIsLoading(false)\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const loadActionsUser = useCallback(async (id) => {\r\n        try {\r\n            const res = await users.get(`/getActionsUser?user=${id}`);\r\n            setActionsUser(res.data)\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        loadActions();\r\n        loadActionsUser(id);\r\n    }, [loadActionsUser,id])\r\n\r\n    return {\r\n        actions,\r\n        actionsUser,\r\n        isLoading,\r\n        loadActionsUser\r\n    }\r\n}\r\n\r\nexport default useGetActions\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xenei\\\\Desktop\\\\origin-test\\\\client\\\\src\\\\components\\\\actionDetail.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport useAuth from '../hooks/useAuth';\nimport { useHistory } from 'react-router-dom';\nimport twelvedata, { apikey } from '../api/twelvedataAPI';\nimport Highcharts from \"highcharts/highstock\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ActionDetail = ({\n  match\n}) => {\n  _s();\n\n  const {\n    user,\n    isLogged\n  } = useAuth();\n  const [actionSelected, setActionSelected] = useState(JSON.parse(match.params.action));\n  const history = useHistory();\n  const [optionSelected, setOptionSelected] = useState(0);\n  const [interval, setInterval] = useState(1);\n  const [chartOptions, setChartOptions] = useState();\n  const [values, setValues] = useState([]);\n  useEffect(() => {\n    if (isLogged === false) history.push('/');\n  }, [isLogged, history]);\n\n  const graficar = async () => {\n    if (optionSelected === 0) {\n      let newValues = [];\n      const res = await twelvedata.get(`https://api.twelvedata.com/time_series?symbol=${actionSelected.symbol}&interval=${interval}min&apikey=${apikey}`);\n      newValues = res.data.values.map(({\n        datetime,\n        open\n      }, index) => {\n        const d = new Date(datetime);\n        const date = d.getHours() + ':' + (d.getMinutes() < 10 ? '0' : '') + d.getMinutes();\n        if (index < 5) return {\n          date,\n          value: +open\n        };else return null;\n      });\n      console.log(newValues);\n      return false;\n      setChartOptions({\n        series: [{\n          data: res.data.values.map(({\n            open\n          }, index) => {\n            if (index < 5) return +open;\n          }),\n          name: 'CotizaciÃ³n',\n          enablePolling: true,\n          dataRefreshRate: interval\n        }],\n        title: {\n          text: actionSelected.symbol\n        },\n        xAxis: [{\n          title: {\n            text: 'Intervalo'\n          },\n          labels: {\n            enabled: true,\n            formatter: () => res.data.values.map(({\n              datetime\n            }, index) => {\n              const d = new Date(datetime);\n              if (index === 5) return d.getHours() + ':' + d.getMinutes();else return null;\n            })\n          }\n        }],\n        yAxis: [{\n          title: {\n            text: 'Cotizacion'\n          }\n        }]\n      });\n    }\n  };\n\n  const changeInterval = val => {\n    setInterval(+val);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [actionSelected.symbol, \" - \", actionSelected.name, \" - \", actionSelected.currency]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Usuario: \", user === null || user === void 0 ? void 0 : user.login]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"graficar\",\n        id: \"graficar\",\n        checked: optionSelected === 0 ? true : false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), \"\\xA0\\xA0Tiempo Real\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 50,\n        display: 'flex',\n        width: 500,\n        justifyContent: 'flex-start'\n      },\n      children: [\"\\xA0\\xA0Intervalo\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => changeInterval(e.target.value),\n        name: \"intervalo\",\n        id: \"intervalo\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1\",\n          children: \"1 Minuto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"5\",\n          children: \"5 Minutos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"15\",\n          children: \"15 Minutos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"grafico\",\n      style: {\n        marginTop: 50,\n        display: 'flex',\n        width: 500,\n        justifyContent: 'flex-end'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: graficar,\n        className: \"btn btn-primary btn-sm\",\n        children: \"Graficar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 50,\n        display: 'flex',\n        width: 800,\n        justifyContent: 'flex-start'\n      },\n      children: values.length ? /*#__PURE__*/_jsxDEV(HighchartsReact, {\n        highcharts: Highcharts,\n        options: chartOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 37\n      }, this) : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ActionDetail, \"v/9ZRZvIKQhLMNAbSUG9v3XeZRU=\", false, function () {\n  return [useAuth, useHistory];\n});\n\n_c = ActionDetail;\nexport default ActionDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActionDetail\");","map":{"version":3,"sources":["C:/Users/xenei/Desktop/origin-test/client/src/components/actionDetail.tsx"],"names":["useState","useEffect","useAuth","useHistory","twelvedata","apikey","Highcharts","HighchartsReact","ActionDetail","match","user","isLogged","actionSelected","setActionSelected","JSON","parse","params","action","history","optionSelected","setOptionSelected","interval","setInterval","chartOptions","setChartOptions","values","setValues","push","graficar","newValues","res","get","symbol","data","map","datetime","open","index","d","Date","date","getHours","getMinutes","value","console","log","series","name","enablePolling","dataRefreshRate","title","text","xAxis","labels","enabled","formatter","yAxis","changeInterval","val","currency","login","marginTop","display","width","justifyContent","e","target","length"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport useAuth from '../hooks/useAuth';\r\nimport { useHistory } from 'react-router-dom';\r\nimport twelvedata, {apikey} from '../api/twelvedataAPI';\r\n\r\nimport Highcharts from \"highcharts/highstock\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\n\r\n\r\nconst ActionDetail = ({match}: any) => {\r\n\r\n    const { user, isLogged } = useAuth();\r\n    const [actionSelected, setActionSelected] = useState(JSON.parse(match.params.action))\r\n    const history = useHistory();\r\n    const [optionSelected, setOptionSelected] = useState(0)\r\n    const [interval, setInterval] = useState(1)\r\n    const [chartOptions, setChartOptions] = useState<any>();\r\n    const [values, setValues] = useState<any>([])\r\n\r\n    useEffect(() => {\r\n        if(isLogged === false)\r\n            history.push('/')\r\n\r\n    }, [isLogged, history])\r\n\r\n    const graficar = async () => {\r\n        if(optionSelected === 0){\r\n            let newValues = [];\r\n            const res = await twelvedata.get(`https://api.twelvedata.com/time_series?symbol=${actionSelected.symbol}&interval=${interval}min&apikey=${apikey}`)\r\n            newValues = res.data.values.map(({datetime,open}: any, index: number) => {\r\n                const d = new Date(datetime)\r\n                const date = d.getHours()+':'+(d.getMinutes()<10?'0':'') + d.getMinutes();\r\n                if(index < 5)\r\n                    return {date, value: +open }\r\n                else\r\n                   return null\r\n            })\r\n\r\n            console.log(newValues);\r\n            return false;\r\n\r\n            setChartOptions({\r\n                series: [\r\n                    {\r\n                        data: res.data.values.map(({open}: any, index: number) => {if(index < 5) return +open}),\r\n                        name:'CotizaciÃ³n',\r\n                        enablePolling: true,\r\n                        dataRefreshRate: interval\r\n                    },\r\n                ],\r\n                title: {\r\n                    text:actionSelected.symbol\r\n                },\r\n                xAxis: [{\r\n                    title: {\r\n                        text: 'Intervalo',\r\n                    },\r\n                    labels: {\r\n                            enabled: true,\r\n                            formatter: () => res.data.values.map(({datetime}: any, index: number) => {\r\n                                const d = new Date(datetime);\r\n                                if(index === 5)\r\n                                    return d.getHours() + ':'+d.getMinutes();\r\n                                else\r\n                                    return null\r\n                            }),\r\n                        }\r\n                }],\r\n                yAxis: [{\r\n                    title: {\r\n                        text: 'Cotizacion'\r\n                    }\r\n                }],\r\n            })\r\n            \r\n        }\r\n    }\r\n\r\n    const changeInterval = (val: string) => {\r\n        setInterval(+val)\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='header'>\r\n                <p>{actionSelected.symbol} - {actionSelected.name} - {actionSelected.currency}</p>\r\n                <p>Usuario: {user?.login}</p>\r\n            </div>\r\n            <div>\r\n                <input type=\"radio\" name=\"graficar\" id=\"graficar\" checked={optionSelected === 0? true : false} />\r\n                &nbsp;&nbsp;Tiempo Real\r\n            </div>\r\n            <div style={{marginTop: 50, display:'flex', width:500, justifyContent: 'flex-start'}}>\r\n                &nbsp;&nbsp;Intervalo&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <select onChange={(e) => changeInterval(e.target.value)} name=\"intervalo\" id=\"intervalo\">\r\n                    <option value=\"1\">1 Minuto</option>\r\n                    <option value=\"5\">5 Minutos</option>\r\n                    <option value=\"15\">15 Minutos</option>\r\n                </select>\r\n            </div>\r\n            <div id='grafico' style={{marginTop: 50, display:'flex', width:500, justifyContent: 'flex-end'}}>\r\n                <button onClick={graficar} className='btn btn-primary btn-sm'>Graficar</button>\r\n            </div>\r\n            <div style={{marginTop: 50, display:'flex', width:800, justifyContent: 'flex-start'}}>\r\n                {\r\n                    values.length ? <HighchartsReact highcharts={Highcharts} options={chartOptions} /> : ''\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActionDetail\r\n"]},"metadata":{},"sourceType":"module"}